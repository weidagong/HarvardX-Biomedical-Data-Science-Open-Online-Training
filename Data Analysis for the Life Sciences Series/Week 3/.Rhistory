source("http://bioconductor.org/biocLite.R")
biocLite(c("AnnotationDbi", "impute", "GO.db", "preprocessCore"))
install.packages("WGCNA")
source("https://bioconductor.org/biocLite.R")
biocLite("edgeR")
install.packages("tximport")
library(tximport)
install.packages("DESeq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("tximport", version = "3.8")
installed.packages()
old.packages()
update.packages()
y
q()
setwd("C:/Users/Weida Gong/Downloads/Work computer/HarvardX Biomedical Data Science Open Online Training/Data Analysis for the Life Sciences Series/Week 3")
knitr::opts_chunk$set(echo = TRUE)
load('tissuesGeneExpression.rda')
head(tissue)
table(tissue)
head(e)
head(tab)
table(tissue)
table(tissue)
index <- which(tissue != 'placenta')
y <- tissue[index]
x <- t(e[, index])
install.packages('class')
library(class)
head(x)
str(x)
head(x[, 1:8])
head(y)
?knn
table(y)
library(class)
pred <- knn(train = x, test = x, cl = y, k = 5)
mean(y! = pred)
mean(y!= pred)
pred
install.packages('caret')
library(caret)
set.seed(1)
idx <- createFolds(y, k = 10)
head(idx)
sapply(idx, length)
x
head(x[, 1:3])
sb <- x[, 1:2]
plot(sb, col = as.numeric(y))
sb
head(sb)
plot(sb, col = as.numeric(y))
?plot
plot(sb[,1], sb[,2], col = as.numeric(y))
plot(sb[,1], sb[,2])
as.numeric(y)
as.fumeric(y)
y
as.numeric(factor(y))
plot(sb[,1], sb[,2], col = as.numeric(factor(y)))
pca <- prcomp(x, scale. = T, center = T)
str(pca)
pca$x
str(pca$x)
head(pca$x)
pca
str(pca)
pca$sdev
sum(pca$sdev)
head(x)
str(pca$x)
?prcomp
head(x[, 1:3])
summary(pca)
x1 <- pca$x[,1]
x1 <- pca$x[,1]
x2 <- pca$x[,2]
plot(x1, x2, col = as.numeric(factor(y)))
xsmall <- data.frame(x1, x2)
idx[[1]]
xsmall <- data.frame(x1, x2)
pred <- knn(train = xsmall[-idx[[1]], ], test = xsmall[idx[[1]]], cl = y[-idx[[1]]], k = 5)
pred <- knn(train = xsmall[-idx[[1]], ], test = xsmall[idx[[1]], ], cl = y[-idx[[1]]], k = 5)
table(true = y[idx[[1]]], pred)
mean(y[idx[[1]]] != pred)
pca <- prcomp(x, scale. = F, center = F)
x1 <- pca$x[,1]
x2 <- pca$x[,2]
plot(x1, x2, col = as.numeric(factor(y)))
xsmall <- data.frame(x1, x2)
pred <- knn(train = xsmall[-idx[[1]], ], test = xsmall[idx[[1]], ], cl = y[-idx[[1]]], k = 5)
table(true = y[idx[[1]]], pred)
mean(y[idx[[1]]] != pred)
for (i in 1:10){
pred <- knn(train = xsmall[-idx[[i]], ], test = xsmall[idx[[i]],], cl = y[idx[[i]]], k = 5)
print(paste(i, ":Error rate : ", round(mean(y[idx[[i]]] != pred)), 3))
}
for (i in 1:10){
pred <- knn(train = xsmall[-idx[[i]], ], test = xsmall[idx[[i]],], cl = y[-idx[[i]]], k = 5)
print(paste(i, ":Error rate : ", round(mean(y[idx[[i]]] != pred)), 3))
}
for (i in 1:10){
pred <- knn(train = xsmall[-idx[[i]], ], test = xsmall[idx[[i]],], cl = y[-idx[[i]]], k = 5)
print(paste(i, ":Error rate : ", round(mean(y[idx[[i]]] != pred), 3), sep = ""))
}
?seq_along
seq_along(idx)
set.seed(1)
ks <- 1:12
res <- sapply(ks, function(k){
subres <- sapply(seq_along(idx), function(i){
pred <- knn(train = xsmall[-idx[[i]], ], test = xsmall[idx[[i]], ],
cl = y[-idx[[i]]], k = k)
return(mean(y[idx[[i]]] != pred))
})
return(mean(subres))
})
res
xsmall <- pca[, 1:5]
xsmall <- pca$x[, 1:5]
pred <- knn(train = xsmall[-idx[[1]], ], test = xsmall[idx[[1]], ], cl = y[-idx[[1]]], k = 5)
table(true = y[idx[[1]]], pred)
mean(y[idx[[1]]] != pred)
for (i in 1:10){
pred <- knn(train = xsmall[-idx[[i]], ], test = xsmall[idx[[i]],], cl = y[-idx[[i]]], k = 5)
print(paste(i, ":Error rate : ", round(mean(y[idx[[i]]] != pred), 3), sep = ""))
}
set.seed(1)
ks <- 1:12
res <- sapply(ks, function(k){
subres <- sapply(seq_along(idx), function(i){
pred <- knn(train = xsmall[-idx[[i]], ], test = xsmall[idx[[i]], ],
cl = y[-idx[[i]]], k = k)
return(mean(y[idx[[i]]] != pred))
})
return(mean(subres))
})
plot(ks, res, type = "o", ylab = "Error rate")
plot(ks, res, type = "o", ylim = c(0, 0.3), ylab = "Error rate")
